{{ define "content" }}

<h2 class="title">{{ .title }}</h2>

<div class="action-bar">
  <form action="/customers" class="search-form" method="GET">
    <input name="search" placeholder="search..." type="search" value="{{ .search }}">
    <button class="button" type="submit">Go</button>
  </form>

  <a class="button button--accent action" href="/customers/create">
    <i class="fa fa-pen action__icon"></i>
    <span>Add a customer</span>
  </a>
</div>

<table class="customers">
  <thead>
    <tr>
      <th>
        <a data-field="id">ID</a>
      </th>
      <th>
        <a data-field="first_name">First Name</a>
      </th>
      <th>
        <a data-field="last_name">Last Name</a>
      </th>
      <th>
        <a data-field="birth_date">Birth Day</a>
      </th>
      <th>
        <a data-field="gender">Gender</a>
      </th>
      <th>
        <a data-field="email">Email</a>
      </th>
      <th>
        <a data-field="address">Address</a>
      </th>
      <th></th>
    </tr>
  </thead>

  <tbody>
    {{ range .customers }}

    <tr>
      <td>{{ .ID }}</td>
      <td>{{ .FirstName }}</td>
      <td>{{ .LastName }}</td>
      <td>{{ .BirthDate.Format "January 2006" }}</td>
      <td>{{ .Gender }}</td>
      <td>{{ .Email }}</td>
      <td>{{ .Address }}</td>
      <td>
        <a class="customer-action" href="/customer/{{ .ID }}">
          <i class="fa fa-eye"></i>
        </a>

        <a class="customer-action" href="/customer/{{ .ID }}/update">
          <i class="fa fa-pen"></i>
        </a>

        <a class="customer-action" href="/customer/{{ .ID }}/delete">
          <i class="fa fa-trash"></i>
        </a>
      </td>
    </tr>

    {{ end}}

  </tbody>

</table>

<div id="pagination" data-count="{{ .count }}"></div>

<script>
  const createLink = (page) => {
    const params = window.location.search
      .replace('?', '')
      .split('&')
      .filter(param => !param.includes('page'))
      .join('&');

    const a = document.createElement('a');

    let query = `/customers?page=${page}`;

    if (params.length > 0) {
      query += `&${params}`;
    }

    a.setAttribute('href', query);
    a.text = page;

    return a;
  }

  const createSpan = () => {
    const span = document.createElement('span');

    span.innerText = '...';

    return span;
  }

  (() => {
    const element = document.getElementById('pagination');

    const pageParam = window.location.search
      .replace('?', '')
      .split('&')
      .find(param => param.includes('page'));
    const page = pageParam ? pageParam.replace('page=', '') : 0;

    const last = Math.ceil(element.dataset.count / 10);
    const delta = 2;
    const left = page - delta;
    const right = page + delta + 1;
    const range = [];
    let l;

    for (let i = 1; i <= last; i++) {
      if (i === 1 || i === last || i >= left && i < right) {
        range.push(i);
      }
    }

    for (let i of range) {
      if (l) {
        if (i - l === 2) {
          element.appendChild(createLink(l + 1));
        } else if (i - l !== 1) {
          element.appendChild(createSpan());
        }
      }

      l = i;

      element.appendChild(createLink(i));
    }
  })();

  (() => {
    const params = window.location.search
      .replace('?', '')
      .split('&');

    const currentParams = params.filter(param => !param.includes('by') && !param.includes('order')).join('&');

    const byParam = params.find(param => param.includes('by'));
    const by = byParam && byParam.replace('by=', '');

    const orderParam = params.find(param => param.includes('order'));

    const links = document.querySelectorAll('.customers tr th a[data-field]');

    links.forEach(link => {
      let query = `/customers?by=${link.dataset.field}`;

      if (currentParams.length > 0) {
        query += `&${currentParams}`;
      }

      if (link.dataset.field === by) {
        link.classList.add('active');

        if (!orderParam) {
          query += '&order=desc';
        }
      }

      link.setAttribute('href', query);
    })
  })();
</script>

{{ end }}